diff a/src/java.base/share/native/pauseengine/pauseengine.c b/src/java.base/share/native/pauseengine/pauseengine.c	(rejected hunks)
@@ -27,17 +27,23 @@
 #include <string.h>
 #include <stdio.h>
 #include <stdlib.h>
-#include <unistd.h>
 #include <signal.h>
 
+#ifdef LINUX
+#include <unistd.h>
 #define RESTORE_SIGNAL   (SIGRTMIN + 2)
+#else
+typedef int pid_t;
+#endif //LINUX
 
 static int kickjvm(pid_t jvm, int code) {
+#ifdef LINUX
     union sigval sv = { .sival_int = code };
     if (-1 == sigqueue(jvm, RESTORE_SIGNAL, sv)) {
         perror("sigqueue");
         return 1;
     }
+#endif //LINUX
     return 0;
 }
 
@@ -45,13 +51,17 @@ int main(int argc, char *argv[]) {
     char* action = argv[1];
     char* imagedir = argv[2];
 
-    char *pidpath;
-    if (-1 == asprintf(&pidpath, "%s/pid", imagedir)) {
+    char pidpath[1024];
+    if (0 > snprintf(pidpath, sizeof(pidpath), "%s/pid", imagedir)) {
         return 1;
     }
 
     if (!strcmp(action, "checkpoint")) {
+#ifdef LINUX
         pid_t jvm = getppid();
+#else
+        pid_t jvm = -1;
+#endif //LINUX
 
         FILE *pidfile = fopen(pidpath, "w");
         if (!pidfile) {
